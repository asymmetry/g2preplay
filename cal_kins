#!/bin/bash

########################################################################
# G2P Kins Script
# Author: Chao Gu
########################################################################

########################################################################
# envs
########################################################################
# NOTICE: everything need to be modified is here !!!

# database path
G2P_DIR=/work/halla/g2p/disk1
DB_DIR=${G2P_DIR}/centos72/replay/DB

# rootfile path
ROOTFILE_PATH=rootfiles

# optics path
OPTICS_PATH=${G2P_DIR}/centos72/g2psim
########################################################################

########################################################################
# main
########################################################################
# source $G2P_DIR/centos72/env.sh
# assume the env.sh file has already been sourced

# some help function
function echo_usage() {
  echo -e "usage: cal_kins [-f|--farm] [-h|--help]"
  echo -e "                [-l|--list=RUN_LIST] RUN_NUMBERS"
  echo -e "See 'cal_kins --help' for more information. "
}

function echo_help() {
  echo -e "usage: cal_kins [options] RUN_NUMBERS"
  echo -e "  -f, --farm                 Use batch farm to replay"
  echo -e "  -h, --help                 This small usage guide"
  echo -e "  -l, --list=RUN_LIST        Set run number list to replay"
}

# analysis the command line parameters and save them
ARGS=$(getopt -o fhl: -l help,farm,list: -n "cal_kins" -- "$@")
ORI_ARGS="$@"
eval set -- "$ARGS"

# program defaults
USE_FARM=0
RUN_LIST=""

# read command line parameters
while true; do
  case "$1" in
    -f|--farm)        USE_FARM=1; shift;;
    -h|--help)        echo_help; exit 0;;
    -l|--list)        RUN_LIST="$2"; shift 2;;
    --)               shift; break;;
    *)                echo_usage; exit 11;;
  esac
done

# normal replay, $1 is run number
function calkins_normal() {
  $OPTICS_PATH/g2prec -d $DB_DIR/recdb -r $ROOTFILE_PATH $1
}

# generate a farm replay script
function calkins_farm() {
  : > cal.$1
  chmod +x cal.$1
  : > job.$1

  echo -e '#!/bin/bash' >> cal.$1
  echo >> cal.$1
  echo -e "source /work/halla/g2p/disk1/centos72/env.sh" >> cal.$1
  echo >> cal.$1
  echo -e ": > $1.log" >> cal.$1
  echo -e "exec 6>&1 7>&2 &>$1.log" >> cal.$1
  echo >> cal.$1
  echo -e "RUN=$1" >> cal.$1
  echo -e "DB_DIR=$DB_DIR" >> cal.$1
  echo -e "OPTICS_PATH=$OPTICS_PATH" >> cal.$1
  echo >> cal.$1
  echo -e "$OPTICS_PATH/g2prec -d $DB_DIR/recdb $RUN" >> cal.$1
  echo >> cal.$1
  echo -e 'exec 1>&6 2>&7 6>&- 7>&-' >> cal.$1
  echo >> cal.$1
  echo -e "cp $1.log $PWD/logfiles" >> cal.$1
  echo -e "cp *.root $ROOTFILE_PATH" >> cal.$1
  echo >> cal.$1
  echo -e 'exit 0' >> cal.$1

  mv cal.$1 jobfiles

  echo -e "PROJECT: g2p" >> job.$1
  echo -e "JOBNAME: calkins.$1" >> job.$1
  echo -e "TRACK: analysis" >> job.$1
  echo -e "DISK_SPACE:  32 GB" >> job.$1
  echo -e "MEMORY: 2000 MB" >> job.$1
  echo -e "OS: centos72" >> job.$1
  echo -e "COMMAND: cal.$1" >> job.$1
  echo -e "OTHER_FILES: " >> job.$1
  echo -e "$PWD/jobfiles/cal.$1" >> job.$1
  echo -e "SINGLE_JOB: true" >> job.$1
  echo -e "INPUT_FILES: " >> job.$1
  for file in $(ls -1 /mss/halla/g2p/raw/g2p_$1.dat.?)
  do
    echo "$file" >> job.$1
  done
}

# 
if [[ "$USE_FARM" -eq 0 ]]; then
  if [[ -n "$RUN_LIST" ]]; then
    exec 6<&0 7<$RUN_LIST 0<&7 # need to use some trick here
    while read i; do
      exec 0<&6
      calkins_normal $i
      exec 0<&7
    done
    exec 0<&6 6<&- 7<&-
  elif [[ -n "$@" ]]; then
    for i in "$@"; do
      calkins_normal $i
    done
  else
    echo_usage
    exit 13
  fi
else
  if [[ -n "$RUN_LIST" ]]; then
    rm -rf job.*
    while read i; do
      calkins_farm $i
    done < $RUN_LIST
    for jobfile in $(ls job.*)
    do
      jsub $jobfile
      mv $jobfile jobfiles
    done
  elif [[ -n "$@" ]]; then
    rm -rf job.*
    for i in "$@"; do
      calkins_farm $i
      jsub job.$i
      mv job.$i jobfiles
    done
  else
    echo_usage
    exit 13
  fi
fi

exit 0
